#pragma once
#define EXPORT_VAR extern
#define EXPORT_FUNC
// Standard C++ includes
#include <algorithm>
#include <chrono>
#include <iostream>
#include <random>

// Standard C includes
#include <cassert>
#include <cmath>
#include <cstdint>
#include <cstring>
#define DT 1.00000000000000000e+00f
typedef float scalar;
#define SCALAR_MIN 1.175494351e-38f
#define SCALAR_MAX 3.402823466e+38f

#define TIME_MIN 1.175494351e-38f
#define TIME_MAX 3.402823466e+38f

// ------------------------------------------------------------------------
// bit tool macros
#define B(x,i) ((x) & (0x80000000 >> (i))) //!< Extract the bit at the specified position i from x
#define setB(x,i) x= ((x) | (0x80000000 >> (i))) //!< Set the bit at the specified position i in x to 1
#define delB(x,i) x= ((x) & (~(0x80000000 >> (i)))) //!< Set the bit at the specified position i in x to 0

extern "C" {
// ------------------------------------------------------------------------
// global variables
// ------------------------------------------------------------------------
EXPORT_VAR unsigned long long iT;
EXPORT_VAR float t;

// ------------------------------------------------------------------------
// timers
// ------------------------------------------------------------------------
EXPORT_VAR double neuronUpdateTime;
EXPORT_VAR double initTime;
EXPORT_VAR double presynapticUpdateTime;
EXPORT_VAR double postsynapticUpdateTime;
EXPORT_VAR double synapseDynamicsTime;
EXPORT_VAR double initSparseTime;
// ------------------------------------------------------------------------
// local neuron groups
// ------------------------------------------------------------------------
#define spikeCount_Inputs glbSpkCntInputs[0]
#define spike_Inputs glbSpkInputs
#define glbSpkShiftInputs 0

EXPORT_VAR unsigned int* glbSpkCntInputs;
EXPORT_VAR unsigned int* glbSpkInputs;
EXPORT_VAR scalar* ValInputs;
#define spikeCount_Population glbSpkCntPopulation[0]
#define spike_Population glbSpkPopulation
#define glbSpkShiftPopulation 0

EXPORT_VAR unsigned int* glbSpkCntPopulation;
EXPORT_VAR unsigned int* glbSpkPopulation;
EXPORT_VAR scalar* UPopulation;
EXPORT_VAR float IappPopulation;

// ------------------------------------------------------------------------
// postsynaptic variables
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// synapse connectivity
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// synapse variables
// ------------------------------------------------------------------------

EXPORT_FUNC void pushInputsSpikesToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullInputsSpikesFromDevice();
EXPORT_FUNC void pushInputsCurrentSpikesToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullInputsCurrentSpikesFromDevice();
EXPORT_FUNC unsigned int* getInputsCurrentSpikes();
EXPORT_FUNC unsigned int& getInputsCurrentSpikeCount();
EXPORT_FUNC void pushValInputsToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullValInputsFromDevice();
EXPORT_FUNC void pushCurrentValInputsToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullCurrentValInputsFromDevice();
EXPORT_FUNC scalar* getCurrentValInputs();
EXPORT_FUNC void pushInputsStateToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullInputsStateFromDevice();
EXPORT_FUNC void pushPopulationSpikesToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullPopulationSpikesFromDevice();
EXPORT_FUNC void pushPopulationCurrentSpikesToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullPopulationCurrentSpikesFromDevice();
EXPORT_FUNC unsigned int* getPopulationCurrentSpikes();
EXPORT_FUNC unsigned int& getPopulationCurrentSpikeCount();
EXPORT_FUNC void pushUPopulationToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullUPopulationFromDevice();
EXPORT_FUNC void pushCurrentUPopulationToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullCurrentUPopulationFromDevice();
EXPORT_FUNC scalar* getCurrentUPopulation();
EXPORT_FUNC void pushPopulationStateToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void pullPopulationStateFromDevice();
// Runner functions
EXPORT_FUNC void copyStateToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void copyConnectivityToDevice(bool uninitialisedOnly = false);
EXPORT_FUNC void copyStateFromDevice();
EXPORT_FUNC void copyCurrentSpikesFromDevice();
EXPORT_FUNC void copyCurrentSpikeEventsFromDevice();
EXPORT_FUNC void allocateMem();
EXPORT_FUNC void freeMem();
EXPORT_FUNC size_t getFreeDeviceMemBytes();
EXPORT_FUNC void stepTime();

// Functions generated by backend
EXPORT_FUNC void updateNeurons(float t);
EXPORT_FUNC void updateSynapses(float t);
EXPORT_FUNC void initialize();
EXPORT_FUNC void initializeSparse();
}  // extern "C"
